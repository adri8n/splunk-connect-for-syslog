# template t_vmware_vsphere_cmmdsTimeMachineDump {
#         template("${.metadata.seq}|${.metadata.id}|${.gb.message}");
# };



block parser app-postfilter-vmware_vsphere_localcli() {    
    channel {

        parser{
            grouping-by(
                scope(process)
                key('$SOURCEIP')
                aggregate(
                    value(".gb.complete" "1")
                    value(".gb.message" "$(implode '\n' $(list-slice 0:-1 $(context-values ${MESSAGE})))")
                    value("PROGRAM" "${PROGRAM}@1")
                    value("HOST" "${HOST}@1")
                    value(".splunk.sc4s_template", "t_5424_hdr_sdata_compact")
                    value(".splunk.sourcetype", "${.splunk.sourcetype}@1")
                    value("fields.sc4s_merge_count", "$(context-length)")
                    value(".structured.level", "full")
                    value(".structured.splunk_hec", "json")
                    value(".structured.syslog", "sdata")
                    inherit-mode(context)
                )
                timeout(2)
            );
        };
        
        if {
            filter {
                "${.gb.complete}" eq "1"
            };            
            rewrite { 
                r_set_splunk_dest_update(
                    class('localcli')
                )
            };              
                        
            rewrite {
                set(
                    '${.gb.message}', 
                    value('MESSAGE')
                );
            };        
        } elif {
             filter {
                "${.gb.complete}" ne "1"
            };            
            
            rewrite { 
                r_set_splunk_dest_update(
                    vendor('null') product('queue')
                )
            }; 
        } else {             
        };

        
    };
};
application app-postfilter-vmware_vsphere_localcli[sc4s-postfilter] {
    filter {
        "${fields.sc4s_vendor}" eq "vmware"
        and (
                "${fields.sc4s_product}" eq "vcenter" 
                or "${fields.sc4s_product}" eq "vsphere"
                or "${fields.sc4s_product}" eq "esx"
            )
        and "`SC4S_SOURCE_VMWARE_VSPHERE_GROUPMSG`" ne "no"
        and program('localcli')
        ;
        
        
    };

    parser { app-postfilter-vmware_vsphere_localcli(); };   
};

