# template t_vmware_vsphere_cmmdsTimeMachineDump {
#         template("${.metadata.seq}|${.metadata.id}|${.gb.message}");
# };



block parser app-postfilter-vmware_vsphere_localcli() {
    channel {

        parser{
            grouping-by(
                scope(process)
                key('$SOURCEIP')
                aggregate(
                    tags("agg")
                    value(".gb.message" "$(implode '\n' $(list-slice 0:-1 $(context-values ${MESSAGE})))")
                    value("PROGRAM" "${PROGRAM}@1")
                    value("HOST" "${HOST}@1")
                    value(".splunk.sc4s_template", "t_5424_hdr_sdata_compact")
                    value(".splunk.sourcetype", "${.splunk.sourcetype}@1")
                    value("fields.sc4s_vendor", "vmware")
                    value("fields.sc4s_product", "vsphere")
                    value(".splunk.index", "infraops")                    
                    value(".metadata.sc4s.countOfParts", "$(context-length)")
                    tags("isStructured")
                    inherit-mode(context)
                )
                timeout(2)
            );
        };

        if {
            filter {
                filter(f_is_agg)
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    class('localcli')
                )
            };

            rewrite {
                set(
                    '${.gb.message}',
                    value('MESSAGE')
                );
            };
        } elif {
             filter {
                not filter(f_is_agg)
            };

            rewrite(r_set_dest_splunk_null_queue);

        } else {
        };


    };
};
application app-postfilter-vmware_vsphere_localcli[sc4s-postfilter] {
    filter {
        match('vmware', value('fields.sc4s_vendor') type(string))
        and (
                match('vcenter', value('fields.sc4s_product') type(string) )
                or match('vsphere', value('fields.sc4s_product') type(string))
                or match('esx', value('fields.sc4s_product') type(string))
            )
        and "`SC4S_SOURCE_VMWARE_VSPHERE_GROUPMSG`" eq "yes"
        and program('localcli' type(string))
        ;


    };

    parser { app-postfilter-vmware_vsphere_localcli(); };
};