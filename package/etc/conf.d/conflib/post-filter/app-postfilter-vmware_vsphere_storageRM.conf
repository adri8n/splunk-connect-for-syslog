# template t_vmware_vsphere_cmmdsTimeMachineDump {
#         template("${.metadata.seq}|${.metadata.id}|${.gb.message}");
# };



block parser app-postfilter-vmware_vsphere_storageRM() {    
    channel {

        parser{
            grouping-by(
                scope(program)
                key('$SOURCEIP')
                trigger(message('datastoreSlopeUS\[5\]'))
                aggregate(
                    value(".gb.complete" "1")
                    value("MESSAGE" "$(implode '\n' $(list-slice 0:-1 $(context-values ${MESSAGE})))")
                    value("PROGRAM" "${PROGRAM}@1")
                    value("HOST" "${HOST}@1")
                    value(".splunk.sc4s_template", "t_msg_only")
                    value(".splunk.sourcetype", "vmware:vsphere:vsan:$(lowercase ${PROGRAM}@1)")
                    value("fields.sc4s_merge_count", "$(context-length)")
                    value(".structured.level", "full")
                    value(".structured.splunk_hec", "json")
                    value(".structured.syslog", "sdata")
                    inherit-mode(context)
                )
                timeout(2)
            );
        };
        
        if {
            filter {
                "${.gb.complete}" eq "1"
            };            
            rewrite { 
                r_set_splunk_dest_update(
                    class('$(lowercase ${PROGRAM})')
                )
            };              
                   
        } elif {
             filter {
                "${.gb.complete}" ne "1"
            };            
            
            rewrite { 
                r_set_splunk_dest_update(
                    vendor('null') product('queue')
                )
            }; 
        } else {
             rewrite {
                set(
                    '${.tmp.message}', 
                    value('MESSAGE')
                );
            };     
        };

        
    };
};
application app-postfilter-vmware_vsphere_storageRM[sc4s-postfilter] {
    filter {
        (
            program('storageRM') 
        )
        and "`SC4S_SOURCE_VMWARE_VSPHERE_GROUPMSG`" ne "no"
        
    };

    parser { app-postfilter-vmware_vsphere_storageRM(); };   
};

